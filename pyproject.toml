[project]
name = "my-project"
version = "0.1.0"
description = "My super cool project"
readme = "README.md"
requires-python = ">=3.13,<3.14"


dependencies = [
    "alembic-postgresql-enum>=1.3.0",
    "alembic>=1.14.0",
    "fastapi[standard]>=0.115.5",
    "hypermedia>=5.3.3",
    "pydantic-settings>=2.6.1",
    "sqlmodel>=0.0.22",
    "tenacity>=9.0.0",
    "psycopg[binary]>=3.2.3",
    "logfire[fastapi]>=3.16.0",
    "loguru>=0.7.3",
]

[dependency-groups]
dev = [
    "mypy>=1.13.0",
    "pytest>=8.3.3",
    "ruff>=0.7.4",
]

[tool.ruff]
line-length = 79
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "alembic/*",
]
select = [
    # Regular flake8 rules
    "C", "E", "F", "W", "S",
    # flake8-bugbear rules
    "B",
    # extra flake rules
    "YTT",
    # Import sorting rules (isort replacement)
    "I",
    # Pylint rules
    "PLC", "PLE", "PLR", "PLW",
    # ruff rules
    "RUF",
    # Docstyle
    "D",
    # Max camplexity
    "C90",
]

ignore = [
    "D100", # Docstring in modules
    "D203", # Incompatible with D211
    "D213", # Incompatible with D212
    # FastApi uses a lot of dependency injection and performs calls/object inits
    # in argument defaults.
    "B008",
    "E711", # Allow "!= None" also since sqlmodel can't use "is None"
    "E712", # Allow "== True" also since sqlmodel can't use "is True"
 
]

fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]
"**/{tests}/*" = [
    "D103", # Allow missing docstring in functions
    "S101", # Allow asserts
    "S106", # Allow hardcorded passwords in tests
]
"**/conftest.py" = [
    "F811", # Allow redefinition (imported fixtures)
]
"**/utils.py" = [
    "PLR0913", # Allow too many return statements
]
"warp/tags/**" = [
    "D101", # Allow missing docstring
]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 6.
max-complexity = 6

[tool.ruff.lint.pylint]
max-public-methods = 8

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.mypy]
plugins = [
  "pydantic.mypy",
]

# follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
# py.test options:
norecursedirs = ["*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
testpaths = [
    "tests",
]
